digraph compiler_explorer {
    bgcolor = white;
    compound = true;
    nodesep = 0.6;
    node [color = "#dddddd:#aaaaaa"; style = filled;];
    edge [dir = both;];
    outside [shape = parallelogram;rank = "source";];
    
    cloudfront [shape = oval;];
    sqs [shape = oval;];
    
    alb [shape = box;label = "Application Load Balancer";];
    
    subgraph cluster_ce_nodes {
        label = "Production";
        style = filled;
        color = "#99dd99";
        
        subgraph cluster_ce_nodes_linux {
            label = "Linux";
            style = filled;
            color = "#ad99dd";
            ce_node_1 [shape = box;label = "EC2";];
            ce_node_2 [shape = box;label = "EC2";];
            ce_node_3 [shape = box;label = "EC2";];
            ce_node_4 [shape = box;label = "EC2";];
        }
        subgraph cluster_ce_nodes_win {
            label = "Windows";
            style = filled;
            color = "#cd99dd";
            
            ce_node_1_win [shape = box;label = "EC2";];
            ce_node_2_win [shape = box;label = "EC2";];
        }
        subgraph cluster_ce_nodes_arm {
            label = "ARM";
            style = filled;
            color = "#99ddda";
            
            ce_node_1_arm [shape = box;label = "EC2";];
            ce_node_2_arm [shape = box;label = "EC2";];
        }
        subgraph cluster_ce_nodes_gpu {
            label = "GPU";
            style = filled;
            color = "#74c974";
            
            ce_node_1_gpu [shape = box;label = "EC2";];
            ce_node_2_gpu [shape = box;label = "EC2";];
        }
    }
    subgraph cluster_staging_nodes {
        label = "Staging";
        style = filled;
        color = "#99dddd";
        staging_node_1 [shape = box;label = "EC2";];
    }
    subgraph cluster_lambda {
        label = "Lambda";
        style = filled;
        color = "#44aa88";
        gh_actions [shape = box;label = "GH Actions";];
        lambda_stats [shape = box;label = "Stats";];
    }
    subgraph cluster_gh_actions {
        label = "Actions Runners";
        style = filled;
        color = "#7799ee";
        action_runner_1 [shape = box;label = "Runner\nEC2";];
        action_runner_2 [shape = box;label = "Runner\nEC2";];
        action_runner_3 [shape = box;label = "Runner\nEC2";];
    }

    admin [shape = box;rank = "sink";label = "admin\nEC2";color = "#ddddff:#aaaacc";];
    
    efs [shape = folder;];
    s3 [shape = folder;];
    dynamodb [shape = cylinder;];
    
    gh_actions -> sqs;
    sqs -> action_runner_1 [lhead = cluster_gh_actions;];
    
    outside -> cloudfront [label = "https";];
    cloudfront -> alb [label = "dynamic content\ncompiler-explorer.com";];
    cloudfront -> s3 [label = "static content\nce-cdn.net";];
    cloudfront -> lambda_stats [label = "stats";];
    cloudfront -> gh_actions [label = "github.com";];
    
    alb -> ce_node_1 [lhead = cluster_ce_nodes;];
    alb -> staging_node_1 [lhead = cluster_staging_nodes;];
    
    lambda_stats -> dynamodb [ltail = cluster_lambda;];
    action_runner_1 -> s3 [ltail = cluster_gh_actions;];
    
    build [shape = box;label = "Library Builder\nEC2";color = "#ddddff:#aaaacc";];
    
    admin -> build;
    build -> s3;
    
    conan [shape = box;label = "Conan\nEC2";color = "#ddddff:#aaaacc";];
    {ce_node_1} -> conan [ltail = cluster_ce_nodes;];
    build -> conan;
    
    winsmb [shape = box;label = "SMB\nEC2";color = "#ddddff:#aaaacc";];
    winsmb -> ce_node_1_win [lhead = cluster_ce_nodes_win;];
    winsmb -> efs;
    
    admin -> {efs s3 dynamodb};
    {ce_node_1} -> admin [ltail = cluster_ce_nodes;];
    {ce_node_1} -> efs [ltail = cluster_ce_nodes;];
    {ce_node_1} -> s3 [ltail = cluster_ce_nodes;];
    {ce_node_1} -> dynamodb [ltail = cluster_ce_nodes;];
    {ce_node_1} -> ce_node_1_win [ltail = cluster_ce_nodes_linux; lhead = cluster_ce_nodes_win;];
    {ce_node_1} -> ce_node_1_gpu [ltail = cluster_ce_nodes_linux; lhead = cluster_ce_nodes_gpu;];
    {ce_node_1} -> ce_node_1_arm [ltail = cluster_ce_nodes_linux; lhead = cluster_ce_nodes_arm;];
    {staging_node_1} -> admin [ltail = cluster_staging_nodes;];
    {staging_node_1} -> efs [ltail = cluster_staging_nodes;];
    {staging_node_1} -> s3 [ltail = cluster_staging_nodes;];
    {staging_node_1} -> dynamodb [ltail = cluster_staging_nodes;];
}